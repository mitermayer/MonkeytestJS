{"name":"Monkeytestjs","tagline":"The Monkeys global acceptance tests and framework for pulling in page based tests written to work with QUnitRunner ","body":"[![Build Status](https://travis-ci.org/TheMonkeys/MonkeytestJS.png)](https://travis-ci.org/TheMonkeys/MonkeytestJS)\r\n\r\nMonkeytestJS\r\n============\r\n\r\n\r\nGetting Started\r\n---------------\r\n\r\nThe file `config.json` include the **options** for the runner:\r\n\r\n```javascript\r\n{\r\n    \"envs\": {\r\n        \"local\": [\"LOCAL URL OR PART OF\"],\r\n        \"stage\": [\"STAGE URL OR PART OF\"],\r\n        \"beta\": [\"BETA URL OR PART OF\"],\r\n        \"production\": [\"PRODUCTION URL OR PART OF\"]\r\n    },\r\n    \"facebook\": {\r\n        \"ids\": {\r\n            \"local\": \"111111111111111\",\r\n            \"stage\": \"222222222222222\",\r\n            \"beta\": \"333333333333333\",\r\n            \"production\": \"444444444444444\",\r\n            \"default\": \"000000000000000\"\r\n        }\r\n    },\r\n    \"testsDir\": \"tests\",\r\n    \"globalTests\": [\r\n        \"global/is_html_w3c_valid.js\",\r\n        \"global/has_utf8_metatag.js\",\r\n        \"global/has_facebook_appid.js\",\r\n        \"global/has_google_analytics.js\"\r\n    ],\r\n    \"pages\": [\r\n        {\r\n            \"url\": \"/tests/core/demo/index.html\"\r\n        },\r\n        {\r\n            \"url\": \"/tests/core/demo/index.html?anotherPageUrl=1\",\r\n            \"tests\": [ \"page/demo_page_test.js\" ]\r\n        }\r\n    ]\r\n}\r\n\r\n```\r\n\r\n***\r\n\r\n### options.envs - Object\r\n\r\nThis is where your environment is declared, you can specify on the config urls to be matched to a specific environment.\r\n\r\nexample:\r\n\r\n```javascript\r\n\r\n    \"envs\" : {\r\n        \"production\": [\"mywebsite.com\", \"anotheralias\"]\r\n    }\r\n\r\n```\r\n\r\nif the string \"**mywebsite.com**\" or \"**anotheralias**\" is part of the website URL than that environment name will be returned by the `.env()` (in this case \"**production**\") method call from a test page. if no environment is found the string \"**default**\" will be returned.\r\n\r\nYou can setup as many environments as you wish, bear in mind that if a match is not found \"**default**\" will be returned.\r\n\r\n***\r\n\r\n### options.testsDir - String\r\n\r\nThis is the locations for MonkeytestJS **based on the root of the website**.\r\n\r\nexample: **http://mywebsite.com/tests/**\r\n\r\n```javascript\r\n\"testsDir\": \"tests\"\r\n\r\n```\r\n\r\n***\r\n\r\n### options.globalTests - Array\r\n\r\nGlobal tests are the tests that will be runned by all pages.\r\n\r\nBy default MonkeytestJS include 4 default tests:\r\n\r\n     - is_html_w3c_valid ( checks if the page is valid throught the w3c validator )\r\n     - has_utf8_metatag ( check for a presence of a utf8 metatag )\r\n     - has_facebook_appid ( check for the facebookAPP id based on the environment )\r\n     - has_google_analytics ( check if we have google analytics setup )\r\n\r\n**Removing** or **adding** a test is just a matter of deleting or adding a reference to it:\r\n\r\n```javascript\r\n    \"globalTests\": [\r\n        \"global/is_html_w3c_valid.js\",\r\n        \"global/has_utf8_metatag.js\",\r\n        \"global/another_test_i_just_created.js\"\r\n    ]\r\n```\r\n\r\n***\r\n\r\n### options.pages - Object\r\n\r\n**options.pages.url - String**\r\n\r\nUrl for the page to be tested, based on the root.\r\n\r\nexample:\r\n\r\n```javascript\r\n    \"url\": \"/tests/core/demo/index.html\"\r\n```\r\n\r\n\r\n**options.pages.tests - Array**\r\n\r\nAssign custom tests for the page. Custom tests will be runned on the page after the **global tests** have finished.\r\n\r\n**Url for the tests are based on the `testsDir`**\r\n\r\nexample:\r\n\r\n```javascript\r\n    \"tests\": [\r\n        \"page/demo_page_test.js\"\r\n    ]\r\n```\r\n\r\nMonkeytestJS API\r\n----------------\r\n\r\nThis methods are used on the test page.\r\n\r\n### test (name, callback ($){})\r\nRuns a synchronous QUint test.\r\n\r\n### asyncTest (name, callback ($){})\r\nRuns an asynchronous QUint test. Must call this.asyncTestDone when the test is complete. Only then will the next chain\r\naction be called.\r\n\r\n### asyncTestDone ()\r\nThis needs to be called when an `asyncTest()` finishes.\r\n\r\n### loadPage (url[optional])\r\nLoads a page into the iframe, also waits until page is loaded before moving to the next action in the chain. If you are\r\nperforming tests on an actual page, this will normally be the first call in a test chain.\r\n\r\n### wait (function, timeout, throttle)\r\nWaits for expression to be evaluated to true or timeout to happen, keeps checking for experssion on throttle interval.\r\n\r\n### env ()\r\nReturns the current environment - based on the url of the current page. If not match is found it returns \"default\"\r\n\r\n### config ()\r\nReturns the config object passed into MonkeytestJS.\r\n\r\n\r\n**NOTE**\r\n\r\n`config()` and `env()` cant be used for chaining since they dont return **context**, they are meant to be used inside the\r\n`test()` or `asyncTest()`.\r\n\r\nWriting Tests\r\n-------------\r\n\r\nAdd the path to the test script to either the options.globalTests[] array or for a specific page to the pages[].tests[]\r\narray.\r\n\r\nCreate a test script file at the path entered above. At the most basic the test script should contain a call to the\r\nregisterTest (name, spec) function. Where the spec object literal must contain at least a function callback. An object can\r\nbe passed instead and an optional with a setup and load callback. The load callback is call in the scope of a MonkeytestJSPageTest object\r\nwhich methods that should be chained together to to perform test actions (see **MonkeytestJSPageTest** methods above):\r\n\r\n```javascript\r\nregisterTest ('Hello world test', function () {\r\n    // this is the test script\r\n    this\r\n    .test(\"Hello?\",function($) {\r\n        ok( true, \"Hello world!\");\r\n    });\r\n);\r\n```\r\n\r\nThis can also be written as\r\n\r\n```javascript\r\nregisterTest ('Hello world test',\r\n    {\r\n        setup:function (container) {\r\n            // this is run before the test\r\n            // use it to do things like clear cookies or assign helpers\r\n            this.myhelper = function doSomething() {};\r\n        }\r\n        ,load : function () {\r\n            // this is the test script\r\n            this\r\n            .test(\"Hello?\",function($) {\r\n\r\n                var env = this.env(); // getting the environment\r\n                var config = this.config(); // getting the config\r\n\r\n                ok( config.foo[env].bar, \"Accessing an item from config on a specific environment\" );\r\n                ok( true, \"Hello world!\");\r\n            });\r\n        }\r\n    }\r\n);\r\n```\r\n\r\nRefer to example test on: ```./tests/page/demo_page_test.js```\r\n\r\n***\r\n\r\n### Contributors\r\n\r\n   - Kynan Stewart Hughes - @k7n4n5t3w4rt\r\n   - Thomas Garrood - @sandboxdigital\r\n   - Mitermayer Reis - @mitermayer\r\n   - Peter Feltham  - @felthy\r\n\r\n\r\n**Change log**\r\n\r\n   - **1.0.0** - Initial release.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
